# Kafka Alerting Pipeline Configuration
# This file contains default configurations that can be overridden by environment variables

# Kafka Configuration
kafka {
  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}
  
  topic = "iot-sensor-data"
  topic = ${?KAFKA_TOPIC}
  
  consumer.group.id = "iot-alerting-consumer"
  consumer.group.id = ${?KAFKA_CONSUMER_GROUP_ID}
  
  starting.offsets = "earliest"  # or "earliest"
  starting.offsets = ${?KAFKA_STARTING_OFFSETS}
}

# Spark Configuration
spark {
  app.name = "IoT-Kafka-Alerting-Pipeline"
  app.name = ${?SPARK_APP_NAME}
  
  checkpoint.location = "/tmp/kafka-alerting-checkpoints/"
  checkpoint.location = ${?SPARK_CHECKPOINT_LOCATION}
  
  processing.time.seconds = 10
  processing.time.seconds = ${?SPARK_PROCESSING_TIME_SECONDS}
  
  log.level = "WARN"
  log.level = ${?SPARK_LOG_LEVEL}
}

# Alerting Configuration
alerting {
  recipient.email = "admin@company.com"
  recipient.email = ${?ALERT_RECIPIENT_EMAIL}
  
  # Temperature thresholds (Celsius)
  temperature {
    min = -10.0
    max = 80.0
  }
  
  # Humidity thresholds (percentage)
  humidity {
    min = 0.0
    max = 100.0
  }
  
  # Pressure thresholds (hPa)
  pressure {
    min = 900.0
    max = 1100.0
  }
  
  # Light thresholds (lux)
  light {
    min = 0.0
    max = 1000.0
  }
  
  # pH level thresholds
  acidity {
    min = 4.0
    max = 10.0
  }
  
  # Battery level threshold (percentage)
  battery.low.threshold = 20
}

# Email Configuration
email {
  # SMTP configuration
  smtp {
    host = "sandbox.smtp.mailtrap.io"
    host = ${?SMTP_HOST}
    
    port = 587
    port = ${?SMTP_PORT}
    
    user = ""
    user = ${?SMTP_USER}
    
    password = ""
    password = ${?SMTP_PASSWORD}
    
    # Enable TLS/SSL
    tls.enabled = true
    ssl.enabled = false
  }
  
  # Email content configuration
  from.address = "iot-alerts@company.com"
  from.address = ${?EMAIL_FROM_ADDRESS}
  
  subject.prefix = "[IoT Alert]"
  subject.prefix = ${?EMAIL_SUBJECT_PREFIX}
}
